// components/HeroSection.module.scss
@use 'sass:math';
@use "sass:color";
@use "../../styles/abstract/variables" as *;
@use "../../styles/abstract/mixins" as *;

.hero {
  position: relative;
  height: 100vh;
  width: 100%;
  min-height: 800px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 20% 50%, rgba(10, 175, 255, 0.15) 0%, transparent 50%);
    z-index: 1;
  }
}

.matrixBackground {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  z-index: 0;
}

.content {
  position: relative;
  z-index: 2;
  max-width: 1200px;
  padding: 2rem;
  text-align: center;
}

.title {
  font-size: clamp(2.5rem, 8vw, 5rem);
  font-weight: 800;
  margin-bottom: 1.5rem;
  line-height: 1.1;
  
  &Main {
    display: block;
    background: linear-gradient(90deg, #fff, #0af);
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: textReveal 1.5s ease-out;
  }
  
  &Secondary {
    display: block;
    color: rgba(255, 255, 255, 0.9);
    animation: textReveal 1.5s ease-out 0.3s both;
  }
}

.subtitle {
  font-size: clamp(1rem, 2.5vw, 1.5rem);
  max-width: 700px;
  margin: 0 auto 3rem;
  color: rgba(255, 255, 255, 0.8);
  animation: fadeIn 1s ease-out 0.6s both;
}

.ctaContainer {
  display: flex;
  gap: 1.5rem;
  justify-content: center;
  animation: fadeIn 1s ease-out 0.9s both;

    @include respond-to(mobile) {
      flex-direction: column;
    }
}

.ctaPrimary, .ctaSecondary {
  position: relative;
  padding: 1rem 2rem;
  font-size: 1.1rem;
  font-weight: 600;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  
  span {
    position: relative;
    z-index: 2;
  }
  
  .hoverEffect {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }
  
  &:hover {
    .hoverEffect {
      transform: translateX(100%);
    }
  }
}

.ctaPrimary {
  background: linear-gradient(45deg, #0af, #0cf);
  color: white;
  box-shadow: 0 4px 15px rgba(0, 170, 255, 0.4);
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba(0, 170, 255, 0.6);
  }
}

.ctaSecondary {
  background: transparent;
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.3);
  
  &:hover {
    transform: translateY(-3px);
    background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 4px 15px rgba(255, 255, 255, 0.1);
  }
}

.floatingOrbs {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.orb {
  position: absolute;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(10, 175, 255, 0.8), transparent 70%);
  filter: blur(5px);
  animation: float linear infinite;
  animation-duration: calc(var(--delay) * 2);
  opacity: 0.6;
  
  &:nth-child(odd) {
    background: radial-gradient(circle, rgba(255, 20, 150, 0.6), transparent 70%);
  }
  
  @keyframes float {
    0% {
      transform: translate(var(--x-start), var(--y-start)) scale(1);
      opacity: 0;
    }
    20% {
      opacity: 0.6;
    }
    100% {
      transform: 
      translate(calc(var(--x-start) + math.random(100) - 50%),
        calc(var(--y-start) + math.random(100) - 50%))
        scale(0);
      opacity: 0;
    }
  }
}

@keyframes textReveal {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

    @include respond-to(mobile) {
      .content{
        padding: 1rem;
      }
      .hero{
  width: 100%;
  padding-top: 40px;
  min-height: 650px;      }
    }